#include "toro.h"

//Constructores
Toroide::Toroide(int lado){
/*
GLfloat v[]={1,1,-1,1.30656,0.541196,-1,1.41421,-0,-1,1.30656,-0.541196,-1,1,-1,-1,0.541196,-1.30656,-1,0,-1.41421,-1,-0.541196,-1.30656,-1,-1,-1,-1,-1.30656,-0.541196,-1,-1.41421,0,-1,-1.30656,0.541196,-1,-1,1,-1,-0.541195,1.30656,-1,1e-006,1.41421,-1,0.541197,1.30656,-1,1,0.999999,1,1.30656,0.541195,1,1.41421,-2e-006,1,1.30656,-0.541198,1,0.999998,-1,1,0.541194,-1.30656,1,-3e-006,-1.41421,1,-0.541199,1.30656,1,-1,-0.999998,1,-1.30656,-0.541193,1,-1.41421,4e-006,1,-1.30656,0.5412,1,-0.999997,1,1,-0.541192,1.30657,1,5e-006,1.41421,1,0.541201,1.30656,1,0,0,-1,0,0,1};
GLint t[]={32,0,1,33,17,16,32,1,2,33,18,17,32,2,3,33,19,18,32,3,4,33,20,19,32,4,5,33,21,20,32,5,6,33,22,21,32,6,7,33,23,22,32,7,8,33,24,23,32,8,9,33,25,24,32,9,10,33,26,25,32,10,11,33,27,26,32,11,12,33,28,27,32,12,13,33,29,28,32,13,14,33,30,29,32,14,15,33,31,30,15,0,32,33,16,31,0,16,17,0,17,1,1,17,18,1,18,2,2,18,19,2,19,3,3,19,20,3,20,4,4,20,21,4,21,5,5,21,22,5,22,6,6,22,23,6,23,7,7,23,24,7,24,8,8,24,25,8,25,9,9,25,26,9,26,10,10,26,27,10,27,11,11,27,28,11,28,12,12,28,29,12,29,13,13,29,30,13,30,14,14,30,31,14,31,15,16,0,15,16,15,31};
nTriangulos=43;
*/
GLfloat v[]={
	0,-0.525731,0.850651,	0.850651,0,0.525731,	0.850651,0,-0.525731,
	-0.850651,0,-0.525731,	-0.850651,0,0.525731,	-0.525731,0.850651,0,
	0.525731,0.850651,0,	0.525731,-0.850651,0,	-0.525731,-0.850651,0,
	0,-0.525731,-0.850651,	0,0.525731,-0.850651,	0,0.525731,0.850651
};
GLint t[]={
	6,2,1,2,7,1,	5,4,3,8,3,4,	11,5,6,10,6,5,	2,10,9,3,9,10,	9,8,7,0,7,8,	1,0,11,4,11,0,
	10,2,6,11,6,1,	10,5,3,11,4,5,	9,7,2,0,1,7,	8,9,3,0,8,4
};

nTriangulos=12;

for(std::size_t i = 0; i <(sizeof v / sizeof *v); i++) {
	vertices.push_back(v[i]*lado);
	triangulos.push_back(t[i]);
}
}

Toroide::Toroide(const Toroide & obj){
	vertices=obj.vertices;
	triangulos=obj.triangulos;
	nTriangulos=obj.nTriangulos;
}

Toroide::Toroide(vector<GLfloat> &v,vector<GLint> &t,unsigned int n){
	vertices=v;
	triangulos=t;
	nTriangulos=n;
}


//Funcion de cambio de lado
void Toroide::setLado(int lado){
	for(int i=0;i<vertices.size();i++)
		vertices[i]*=lado;
}
